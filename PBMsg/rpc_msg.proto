syntax = "proto3";

package rpc_msg;

//-------------RPC-------------

enum RPC_OPCODES {
	PRC_None = 0;
	PRC_Multiplexer_Forward = 1;
}

enum RPC_CODE {
	CODE_Ok = 0;
	CODE_Ok_Async = 1;

	CODE_Timeout = 100;
	CODE_Unregister = 101;
	CODE_ParseError = 102;
	CODE_ErrorServerPost = 103; 
	CODE_RouteNotLinkToServer = 104;
	CODE_RouteSendToServerError = 105;
}


message CHANNEL
{
	uint32 type = 1;
	uint32 id = 2;
}

message CONTROLLER 
{
	uint64 serial_num = 1;
	uint64 timeout_ms = 2;
}

message CLIENT_IDENTIFIER
{
	CHANNEL stub = 1;
	uint64 seq_id = 2;
	bool required_reply = 3;
}

message SERVER_IDENTIFIER
{
	CHANNEL stub = 1;
}

message RPC_REQUEST
{
	CLIENT_IDENTIFIER client = 1;
	SERVER_IDENTIFIER server = 2;
	CHANNEL router = 3;
	RPC_OPCODES opcodes = 4;
	bytes args_data = 5;
}

message STATUS
{
	uint32 code = 1;
	string msg = 2;
}

message RPC_RESPONSE
{
	CLIENT_IDENTIFIER client = 1;
	SERVER_IDENTIFIER server = 2;
	CHANNEL router = 3;
	STATUS status = 4;
	bytes result_data = 5;
}

message RoleIdentifier
{
	uint64 user_id = 1;
	uint32 gw_id = 2;
}

message PRC_Multiplexer_Forward_Args
{
	RoleIdentifier role_id = 1;
	uint32 opcodes = 2;
	bytes body_msg = 3;
}
