// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service_discovery.proto

#include "service_discovery.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_service_5fdiscovery_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EndPointInstance_service_5fdiscovery_2eproto;
namespace service_discovery {
class EndPointInstanceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EndPointInstance> _instance;
} _EndPointInstance_default_instance_;
class MSG_REQUEST_ADD_INSTANCEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_REQUEST_ADD_INSTANCE> _instance;
} _MSG_REQUEST_ADD_INSTANCE_default_instance_;
class MSG_RESP_ADD_INSTANCEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_RESP_ADD_INSTANCE> _instance;
} _MSG_RESP_ADD_INSTANCE_default_instance_;
class MSG_NOTICE_INSTANCEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MSG_NOTICE_INSTANCE> _instance;
} _MSG_NOTICE_INSTANCE_default_instance_;
}  // namespace service_discovery
static void InitDefaultsscc_info_EndPointInstance_service_5fdiscovery_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_discovery::_EndPointInstance_default_instance_;
    new (ptr) ::service_discovery::EndPointInstance();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_discovery::EndPointInstance::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EndPointInstance_service_5fdiscovery_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EndPointInstance_service_5fdiscovery_2eproto}, {}};

static void InitDefaultsscc_info_MSG_NOTICE_INSTANCE_service_5fdiscovery_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_discovery::_MSG_NOTICE_INSTANCE_default_instance_;
    new (ptr) ::service_discovery::MSG_NOTICE_INSTANCE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_discovery::MSG_NOTICE_INSTANCE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_NOTICE_INSTANCE_service_5fdiscovery_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_NOTICE_INSTANCE_service_5fdiscovery_2eproto}, {
      &scc_info_EndPointInstance_service_5fdiscovery_2eproto.base,}};

static void InitDefaultsscc_info_MSG_REQUEST_ADD_INSTANCE_service_5fdiscovery_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_discovery::_MSG_REQUEST_ADD_INSTANCE_default_instance_;
    new (ptr) ::service_discovery::MSG_REQUEST_ADD_INSTANCE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_discovery::MSG_REQUEST_ADD_INSTANCE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MSG_REQUEST_ADD_INSTANCE_service_5fdiscovery_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MSG_REQUEST_ADD_INSTANCE_service_5fdiscovery_2eproto}, {
      &scc_info_EndPointInstance_service_5fdiscovery_2eproto.base,}};

static void InitDefaultsscc_info_MSG_RESP_ADD_INSTANCE_service_5fdiscovery_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service_discovery::_MSG_RESP_ADD_INSTANCE_default_instance_;
    new (ptr) ::service_discovery::MSG_RESP_ADD_INSTANCE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::service_discovery::MSG_RESP_ADD_INSTANCE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MSG_RESP_ADD_INSTANCE_service_5fdiscovery_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MSG_RESP_ADD_INSTANCE_service_5fdiscovery_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_service_5fdiscovery_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_service_5fdiscovery_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_service_5fdiscovery_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_service_5fdiscovery_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_discovery::EndPointInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_discovery::EndPointInstance, type_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::EndPointInstance, id_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::EndPointInstance, auth_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::EndPointInstance, ip_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::EndPointInstance, port_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::EndPointInstance, codec_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_REQUEST_ADD_INSTANCE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_REQUEST_ADD_INSTANCE, instance_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_RESP_ADD_INSTANCE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_RESP_ADD_INSTANCE, status_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_NOTICE_INSTANCE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_NOTICE_INSTANCE, mode_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_NOTICE_INSTANCE, add_instance_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_NOTICE_INSTANCE, delete_instance_),
  PROTOBUF_FIELD_OFFSET(::service_discovery::MSG_NOTICE_INSTANCE, update_instance_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service_discovery::EndPointInstance)},
  { 11, -1, sizeof(::service_discovery::MSG_REQUEST_ADD_INSTANCE)},
  { 17, -1, sizeof(::service_discovery::MSG_RESP_ADD_INSTANCE)},
  { 23, -1, sizeof(::service_discovery::MSG_NOTICE_INSTANCE)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_discovery::_EndPointInstance_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_discovery::_MSG_REQUEST_ADD_INSTANCE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_discovery::_MSG_RESP_ADD_INSTANCE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service_discovery::_MSG_NOTICE_INSTANCE_default_instance_),
};

const char descriptor_table_protodef_service_5fdiscovery_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027service_discovery.proto\022\021service_disco"
  "very\"\211\001\n\020EndPointInstance\022-\n\004type\030\001 \001(\0162"
  "\037.service_discovery.EndPointType\022\n\n\002id\030\002"
  " \001(\r\022\014\n\004auth\030\003 \001(\t\022\n\n\002ip\030\004 \001(\t\022\014\n\004port\030\005"
  " \001(\r\022\022\n\ncodec_type\030\006 \001(\r\"Q\n\030MSG_REQUEST_"
  "ADD_INSTANCE\0225\n\010instance\030\001 \001(\0132#.service"
  "_discovery.EndPointInstance\",\n\025MSG_RESP_"
  "ADD_INSTANCE\022\023\n\013status_code\030\001 \001(\r\"\371\001\n\023MS"
  "G_NOTICE_INSTANCE\022+\n\004mode\030\001 \001(\0162\035.servic"
  "e_discovery.UpdateMode\0229\n\014add_instance\030\002"
  " \003(\0132#.service_discovery.EndPointInstanc"
  "e\022<\n\017delete_instance\030\003 \003(\0132#.service_dis"
  "covery.EndPointInstance\022<\n\017update_instan"
  "ce\030\004 \003(\0132#.service_discovery.EndPointIns"
  "tance*m\n\014EndPointType\022\014\n\010EPT_None\020\000\022\030\n\024E"
  "PT_Service_Registry\020\001\022\023\n\017EPT_Route_Proxy"
  "\020\002\022\023\n\017EPT_Logic_Scene\020\003\022\013\n\007EPT_Max\020\004*:\n\n"
  "UpdateMode\022\013\n\007UM_None\020\000\022\013\n\007UM_Full\020\001\022\022\n\016"
  "UM_Incremental\020\002b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_service_5fdiscovery_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_service_5fdiscovery_2eproto_sccs[4] = {
  &scc_info_EndPointInstance_service_5fdiscovery_2eproto.base,
  &scc_info_MSG_NOTICE_INSTANCE_service_5fdiscovery_2eproto.base,
  &scc_info_MSG_REQUEST_ADD_INSTANCE_service_5fdiscovery_2eproto.base,
  &scc_info_MSG_RESP_ADD_INSTANCE_service_5fdiscovery_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_service_5fdiscovery_2eproto_once;
static bool descriptor_table_service_5fdiscovery_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_5fdiscovery_2eproto = {
  &descriptor_table_service_5fdiscovery_2eproto_initialized, descriptor_table_protodef_service_5fdiscovery_2eproto, "service_discovery.proto", 744,
  &descriptor_table_service_5fdiscovery_2eproto_once, descriptor_table_service_5fdiscovery_2eproto_sccs, descriptor_table_service_5fdiscovery_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_service_5fdiscovery_2eproto::offsets,
  file_level_metadata_service_5fdiscovery_2eproto, 4, file_level_enum_descriptors_service_5fdiscovery_2eproto, file_level_service_descriptors_service_5fdiscovery_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_service_5fdiscovery_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_service_5fdiscovery_2eproto), true);
namespace service_discovery {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EndPointType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_service_5fdiscovery_2eproto);
  return file_level_enum_descriptors_service_5fdiscovery_2eproto[0];
}
bool EndPointType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* UpdateMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_service_5fdiscovery_2eproto);
  return file_level_enum_descriptors_service_5fdiscovery_2eproto[1];
}
bool UpdateMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void EndPointInstance::InitAsDefaultInstance() {
}
class EndPointInstance::_Internal {
 public:
};

EndPointInstance::EndPointInstance()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_discovery.EndPointInstance)
}
EndPointInstance::EndPointInstance(const EndPointInstance& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  auth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_auth().empty()) {
    auth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.auth_);
  }
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ip().empty()) {
    ip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&codec_type_) -
    reinterpret_cast<char*>(&type_)) + sizeof(codec_type_));
  // @@protoc_insertion_point(copy_constructor:service_discovery.EndPointInstance)
}

void EndPointInstance::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_EndPointInstance_service_5fdiscovery_2eproto.base);
  auth_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&codec_type_) -
      reinterpret_cast<char*>(&type_)) + sizeof(codec_type_));
}

EndPointInstance::~EndPointInstance() {
  // @@protoc_insertion_point(destructor:service_discovery.EndPointInstance)
  SharedDtor();
}

void EndPointInstance::SharedDtor() {
  auth_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void EndPointInstance::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EndPointInstance& EndPointInstance::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EndPointInstance_service_5fdiscovery_2eproto.base);
  return *internal_default_instance();
}


void EndPointInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:service_discovery.EndPointInstance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  auth_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&codec_type_) -
      reinterpret_cast<char*>(&type_)) + sizeof(codec_type_));
  _internal_metadata_.Clear();
}

const char* EndPointInstance::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_discovery.EndPointType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::service_discovery::EndPointType>(val));
        } else goto handle_unusual;
        continue;
      // uint32 id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string auth = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_auth();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service_discovery.EndPointInstance.auth"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ip = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service_discovery.EndPointInstance.ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 port = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 codec_type = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          codec_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EndPointInstance::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_discovery.EndPointInstance)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_discovery.EndPointType type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_id(), target);
  }

  // string auth = 3;
  if (this->auth().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_auth().data(), static_cast<int>(this->_internal_auth().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service_discovery.EndPointInstance.auth");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_auth(), target);
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service_discovery.EndPointInstance.ip");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_ip(), target);
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_port(), target);
  }

  // uint32 codec_type = 6;
  if (this->codec_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_codec_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_discovery.EndPointInstance)
  return target;
}

size_t EndPointInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_discovery.EndPointInstance)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string auth = 3;
  if (this->auth().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_auth());
  }

  // string ip = 4;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // .service_discovery.EndPointType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // uint32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_id());
  }

  // uint32 port = 5;
  if (this->port() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_port());
  }

  // uint32 codec_type = 6;
  if (this->codec_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_codec_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EndPointInstance::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_discovery.EndPointInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const EndPointInstance* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EndPointInstance>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_discovery.EndPointInstance)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_discovery.EndPointInstance)
    MergeFrom(*source);
  }
}

void EndPointInstance::MergeFrom(const EndPointInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_discovery.EndPointInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.auth().size() > 0) {

    auth_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.auth_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.port() != 0) {
    _internal_set_port(from._internal_port());
  }
  if (from.codec_type() != 0) {
    _internal_set_codec_type(from._internal_codec_type());
  }
}

void EndPointInstance::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_discovery.EndPointInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EndPointInstance::CopyFrom(const EndPointInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_discovery.EndPointInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EndPointInstance::IsInitialized() const {
  return true;
}

void EndPointInstance::InternalSwap(EndPointInstance* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  auth_.Swap(&other->auth_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ip_.Swap(&other->ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(type_, other->type_);
  swap(id_, other->id_);
  swap(port_, other->port_);
  swap(codec_type_, other->codec_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EndPointInstance::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_REQUEST_ADD_INSTANCE::InitAsDefaultInstance() {
  ::service_discovery::_MSG_REQUEST_ADD_INSTANCE_default_instance_._instance.get_mutable()->instance_ = const_cast< ::service_discovery::EndPointInstance*>(
      ::service_discovery::EndPointInstance::internal_default_instance());
}
class MSG_REQUEST_ADD_INSTANCE::_Internal {
 public:
  static const ::service_discovery::EndPointInstance& instance(const MSG_REQUEST_ADD_INSTANCE* msg);
};

const ::service_discovery::EndPointInstance&
MSG_REQUEST_ADD_INSTANCE::_Internal::instance(const MSG_REQUEST_ADD_INSTANCE* msg) {
  return *msg->instance_;
}
MSG_REQUEST_ADD_INSTANCE::MSG_REQUEST_ADD_INSTANCE()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_discovery.MSG_REQUEST_ADD_INSTANCE)
}
MSG_REQUEST_ADD_INSTANCE::MSG_REQUEST_ADD_INSTANCE(const MSG_REQUEST_ADD_INSTANCE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_instance()) {
    instance_ = new ::service_discovery::EndPointInstance(*from.instance_);
  } else {
    instance_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service_discovery.MSG_REQUEST_ADD_INSTANCE)
}

void MSG_REQUEST_ADD_INSTANCE::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_REQUEST_ADD_INSTANCE_service_5fdiscovery_2eproto.base);
  instance_ = nullptr;
}

MSG_REQUEST_ADD_INSTANCE::~MSG_REQUEST_ADD_INSTANCE() {
  // @@protoc_insertion_point(destructor:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  SharedDtor();
}

void MSG_REQUEST_ADD_INSTANCE::SharedDtor() {
  if (this != internal_default_instance()) delete instance_;
}

void MSG_REQUEST_ADD_INSTANCE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_REQUEST_ADD_INSTANCE& MSG_REQUEST_ADD_INSTANCE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_REQUEST_ADD_INSTANCE_service_5fdiscovery_2eproto.base);
  return *internal_default_instance();
}


void MSG_REQUEST_ADD_INSTANCE::Clear() {
// @@protoc_insertion_point(message_clear_start:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && instance_ != nullptr) {
    delete instance_;
  }
  instance_ = nullptr;
  _internal_metadata_.Clear();
}

const char* MSG_REQUEST_ADD_INSTANCE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_discovery.EndPointInstance instance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_instance(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_REQUEST_ADD_INSTANCE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_discovery.EndPointInstance instance = 1;
  if (this->has_instance()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::instance(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  return target;
}

size_t MSG_REQUEST_ADD_INSTANCE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .service_discovery.EndPointInstance instance = 1;
  if (this->has_instance()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *instance_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_REQUEST_ADD_INSTANCE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_REQUEST_ADD_INSTANCE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_REQUEST_ADD_INSTANCE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_discovery.MSG_REQUEST_ADD_INSTANCE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_discovery.MSG_REQUEST_ADD_INSTANCE)
    MergeFrom(*source);
  }
}

void MSG_REQUEST_ADD_INSTANCE::MergeFrom(const MSG_REQUEST_ADD_INSTANCE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instance()) {
    _internal_mutable_instance()->::service_discovery::EndPointInstance::MergeFrom(from._internal_instance());
  }
}

void MSG_REQUEST_ADD_INSTANCE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_REQUEST_ADD_INSTANCE::CopyFrom(const MSG_REQUEST_ADD_INSTANCE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_discovery.MSG_REQUEST_ADD_INSTANCE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_REQUEST_ADD_INSTANCE::IsInitialized() const {
  return true;
}

void MSG_REQUEST_ADD_INSTANCE::InternalSwap(MSG_REQUEST_ADD_INSTANCE* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(instance_, other->instance_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_REQUEST_ADD_INSTANCE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_RESP_ADD_INSTANCE::InitAsDefaultInstance() {
}
class MSG_RESP_ADD_INSTANCE::_Internal {
 public:
};

MSG_RESP_ADD_INSTANCE::MSG_RESP_ADD_INSTANCE()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_discovery.MSG_RESP_ADD_INSTANCE)
}
MSG_RESP_ADD_INSTANCE::MSG_RESP_ADD_INSTANCE(const MSG_RESP_ADD_INSTANCE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_code_ = from.status_code_;
  // @@protoc_insertion_point(copy_constructor:service_discovery.MSG_RESP_ADD_INSTANCE)
}

void MSG_RESP_ADD_INSTANCE::SharedCtor() {
  status_code_ = 0u;
}

MSG_RESP_ADD_INSTANCE::~MSG_RESP_ADD_INSTANCE() {
  // @@protoc_insertion_point(destructor:service_discovery.MSG_RESP_ADD_INSTANCE)
  SharedDtor();
}

void MSG_RESP_ADD_INSTANCE::SharedDtor() {
}

void MSG_RESP_ADD_INSTANCE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_RESP_ADD_INSTANCE& MSG_RESP_ADD_INSTANCE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_RESP_ADD_INSTANCE_service_5fdiscovery_2eproto.base);
  return *internal_default_instance();
}


void MSG_RESP_ADD_INSTANCE::Clear() {
// @@protoc_insertion_point(message_clear_start:service_discovery.MSG_RESP_ADD_INSTANCE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  status_code_ = 0u;
  _internal_metadata_.Clear();
}

const char* MSG_RESP_ADD_INSTANCE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 status_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          status_code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_RESP_ADD_INSTANCE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_discovery.MSG_RESP_ADD_INSTANCE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 status_code = 1;
  if (this->status_code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_status_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_discovery.MSG_RESP_ADD_INSTANCE)
  return target;
}

size_t MSG_RESP_ADD_INSTANCE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_discovery.MSG_RESP_ADD_INSTANCE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 status_code = 1;
  if (this->status_code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_status_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_RESP_ADD_INSTANCE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_discovery.MSG_RESP_ADD_INSTANCE)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_RESP_ADD_INSTANCE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_RESP_ADD_INSTANCE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_discovery.MSG_RESP_ADD_INSTANCE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_discovery.MSG_RESP_ADD_INSTANCE)
    MergeFrom(*source);
  }
}

void MSG_RESP_ADD_INSTANCE::MergeFrom(const MSG_RESP_ADD_INSTANCE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_discovery.MSG_RESP_ADD_INSTANCE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.status_code() != 0) {
    _internal_set_status_code(from._internal_status_code());
  }
}

void MSG_RESP_ADD_INSTANCE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_discovery.MSG_RESP_ADD_INSTANCE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_RESP_ADD_INSTANCE::CopyFrom(const MSG_RESP_ADD_INSTANCE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_discovery.MSG_RESP_ADD_INSTANCE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_RESP_ADD_INSTANCE::IsInitialized() const {
  return true;
}

void MSG_RESP_ADD_INSTANCE::InternalSwap(MSG_RESP_ADD_INSTANCE* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(status_code_, other->status_code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_RESP_ADD_INSTANCE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MSG_NOTICE_INSTANCE::InitAsDefaultInstance() {
}
class MSG_NOTICE_INSTANCE::_Internal {
 public:
};

MSG_NOTICE_INSTANCE::MSG_NOTICE_INSTANCE()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:service_discovery.MSG_NOTICE_INSTANCE)
}
MSG_NOTICE_INSTANCE::MSG_NOTICE_INSTANCE(const MSG_NOTICE_INSTANCE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      add_instance_(from.add_instance_),
      delete_instance_(from.delete_instance_),
      update_instance_(from.update_instance_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:service_discovery.MSG_NOTICE_INSTANCE)
}

void MSG_NOTICE_INSTANCE::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MSG_NOTICE_INSTANCE_service_5fdiscovery_2eproto.base);
  mode_ = 0;
}

MSG_NOTICE_INSTANCE::~MSG_NOTICE_INSTANCE() {
  // @@protoc_insertion_point(destructor:service_discovery.MSG_NOTICE_INSTANCE)
  SharedDtor();
}

void MSG_NOTICE_INSTANCE::SharedDtor() {
}

void MSG_NOTICE_INSTANCE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MSG_NOTICE_INSTANCE& MSG_NOTICE_INSTANCE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MSG_NOTICE_INSTANCE_service_5fdiscovery_2eproto.base);
  return *internal_default_instance();
}


void MSG_NOTICE_INSTANCE::Clear() {
// @@protoc_insertion_point(message_clear_start:service_discovery.MSG_NOTICE_INSTANCE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  add_instance_.Clear();
  delete_instance_.Clear();
  update_instance_.Clear();
  mode_ = 0;
  _internal_metadata_.Clear();
}

const char* MSG_NOTICE_INSTANCE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service_discovery.UpdateMode mode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::service_discovery::UpdateMode>(val));
        } else goto handle_unusual;
        continue;
      // repeated .service_discovery.EndPointInstance add_instance = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_add_instance(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .service_discovery.EndPointInstance delete_instance = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_delete_instance(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .service_discovery.EndPointInstance update_instance = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_update_instance(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MSG_NOTICE_INSTANCE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service_discovery.MSG_NOTICE_INSTANCE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service_discovery.UpdateMode mode = 1;
  if (this->mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_mode(), target);
  }

  // repeated .service_discovery.EndPointInstance add_instance = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_add_instance_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_add_instance(i), target, stream);
  }

  // repeated .service_discovery.EndPointInstance delete_instance = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_delete_instance_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_delete_instance(i), target, stream);
  }

  // repeated .service_discovery.EndPointInstance update_instance = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_update_instance_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_update_instance(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service_discovery.MSG_NOTICE_INSTANCE)
  return target;
}

size_t MSG_NOTICE_INSTANCE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service_discovery.MSG_NOTICE_INSTANCE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .service_discovery.EndPointInstance add_instance = 2;
  total_size += 1UL * this->_internal_add_instance_size();
  for (const auto& msg : this->add_instance_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .service_discovery.EndPointInstance delete_instance = 3;
  total_size += 1UL * this->_internal_delete_instance_size();
  for (const auto& msg : this->delete_instance_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .service_discovery.EndPointInstance update_instance = 4;
  total_size += 1UL * this->_internal_update_instance_size();
  for (const auto& msg : this->update_instance_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .service_discovery.UpdateMode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MSG_NOTICE_INSTANCE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service_discovery.MSG_NOTICE_INSTANCE)
  GOOGLE_DCHECK_NE(&from, this);
  const MSG_NOTICE_INSTANCE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MSG_NOTICE_INSTANCE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service_discovery.MSG_NOTICE_INSTANCE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service_discovery.MSG_NOTICE_INSTANCE)
    MergeFrom(*source);
  }
}

void MSG_NOTICE_INSTANCE::MergeFrom(const MSG_NOTICE_INSTANCE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service_discovery.MSG_NOTICE_INSTANCE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  add_instance_.MergeFrom(from.add_instance_);
  delete_instance_.MergeFrom(from.delete_instance_);
  update_instance_.MergeFrom(from.update_instance_);
  if (from.mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
}

void MSG_NOTICE_INSTANCE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service_discovery.MSG_NOTICE_INSTANCE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MSG_NOTICE_INSTANCE::CopyFrom(const MSG_NOTICE_INSTANCE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service_discovery.MSG_NOTICE_INSTANCE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MSG_NOTICE_INSTANCE::IsInitialized() const {
  return true;
}

void MSG_NOTICE_INSTANCE::InternalSwap(MSG_NOTICE_INSTANCE* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  add_instance_.InternalSwap(&other->add_instance_);
  delete_instance_.InternalSwap(&other->delete_instance_);
  update_instance_.InternalSwap(&other->update_instance_);
  swap(mode_, other->mode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MSG_NOTICE_INSTANCE::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service_discovery
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::service_discovery::EndPointInstance* Arena::CreateMaybeMessage< ::service_discovery::EndPointInstance >(Arena* arena) {
  return Arena::CreateInternal< ::service_discovery::EndPointInstance >(arena);
}
template<> PROTOBUF_NOINLINE ::service_discovery::MSG_REQUEST_ADD_INSTANCE* Arena::CreateMaybeMessage< ::service_discovery::MSG_REQUEST_ADD_INSTANCE >(Arena* arena) {
  return Arena::CreateInternal< ::service_discovery::MSG_REQUEST_ADD_INSTANCE >(arena);
}
template<> PROTOBUF_NOINLINE ::service_discovery::MSG_RESP_ADD_INSTANCE* Arena::CreateMaybeMessage< ::service_discovery::MSG_RESP_ADD_INSTANCE >(Arena* arena) {
  return Arena::CreateInternal< ::service_discovery::MSG_RESP_ADD_INSTANCE >(arena);
}
template<> PROTOBUF_NOINLINE ::service_discovery::MSG_NOTICE_INSTANCE* Arena::CreateMaybeMessage< ::service_discovery::MSG_NOTICE_INSTANCE >(Arena* arena) {
  return Arena::CreateInternal< ::service_discovery::MSG_NOTICE_INSTANCE >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
