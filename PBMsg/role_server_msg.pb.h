// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role_server_msg.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_role_5fserver_5fmsg_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_role_5fserver_5fmsg_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_role_5fserver_5fmsg_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_role_5fserver_5fmsg_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_role_5fserver_5fmsg_2eproto;
namespace role_msg {
class AGENT_SEQ_ID;
class AGENT_SEQ_IDDefaultTypeInternal;
extern AGENT_SEQ_IDDefaultTypeInternal _AGENT_SEQ_ID_default_instance_;
class ROLE_SUMMARY;
class ROLE_SUMMARYDefaultTypeInternal;
extern ROLE_SUMMARYDefaultTypeInternal _ROLE_SUMMARY_default_instance_;
}  // namespace role_msg
PROTOBUF_NAMESPACE_OPEN
template<> ::role_msg::AGENT_SEQ_ID* Arena::CreateMaybeMessage<::role_msg::AGENT_SEQ_ID>(Arena*);
template<> ::role_msg::ROLE_SUMMARY* Arena::CreateMaybeMessage<::role_msg::ROLE_SUMMARY>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace role_msg {

// ===================================================================

class ROLE_SUMMARY :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:role_msg.ROLE_SUMMARY) */ {
 public:
  ROLE_SUMMARY();
  virtual ~ROLE_SUMMARY();

  ROLE_SUMMARY(const ROLE_SUMMARY& from);
  ROLE_SUMMARY(ROLE_SUMMARY&& from) noexcept
    : ROLE_SUMMARY() {
    *this = ::std::move(from);
  }

  inline ROLE_SUMMARY& operator=(const ROLE_SUMMARY& from) {
    CopyFrom(from);
    return *this;
  }
  inline ROLE_SUMMARY& operator=(ROLE_SUMMARY&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ROLE_SUMMARY& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ROLE_SUMMARY* internal_default_instance() {
    return reinterpret_cast<const ROLE_SUMMARY*>(
               &_ROLE_SUMMARY_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ROLE_SUMMARY& a, ROLE_SUMMARY& b) {
    a.Swap(&b);
  }
  inline void Swap(ROLE_SUMMARY* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ROLE_SUMMARY* New() const final {
    return CreateMaybeMessage<ROLE_SUMMARY>(nullptr);
  }

  ROLE_SUMMARY* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ROLE_SUMMARY>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ROLE_SUMMARY& from);
  void MergeFrom(const ROLE_SUMMARY& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ROLE_SUMMARY* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "role_msg.ROLE_SUMMARY";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_role_5fserver_5fmsg_2eproto);
    return ::descriptor_table_role_5fserver_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLootHistoryFieldNumber = 26,
    kNameFieldNumber = 2,
    kFaceFieldNumber = 5,
    kGuildNameFieldNumber = 8,
    kGuildShortNameFieldNumber = 20,
    kUserIdFieldNumber = 1,
    kFightingPowerFieldNumber = 4,
    kLevelFieldNumber = 3,
    kLanguageTypeFieldNumber = 9,
    kGuildIdFieldNumber = 7,
    kHeroPowerFieldNumber = 10,
    kSoldierPowerFieldNumber = 11,
    kBuildingPowerFieldNumber = 12,
    kOnlineFlagFieldNumber = 6,
    kRecordPowerRankFieldNumber = 17,
    kGuildRankFieldNumber = 13,
    kSurveyExpireTimeFieldNumber = 14,
    kPowerRankFieldNumber = 15,
    kBestPowerRankFieldNumber = 16,
    kGuildServerIdFieldNumber = 18,
    kGuildLanguageFieldNumber = 19,
    kLootDefenseTimeFieldNumber = 22,
    kLootAttackTimeFieldNumber = 23,
    kLootLockOwnerFieldNumber = 24,
    kCityCenterLevelFieldNumber = 21,
    kOnlineServerTypeFieldNumber = 27,
    kLootLockAtFieldNumber = 25,
    kOnlineServerIdFieldNumber = 28,
    kFantasiaChapterFieldNumber = 29,
    kFantasiaChapterPassFieldNumber = 30,
    kRegisterTimeFieldNumber = 31,
    kSeasonPointPeakFieldNumber = 32,
    kLootWinTimesFieldNumber = 33,
    kExcludedPowerFieldNumber = 34,
    kLoginTimeFieldNumber = 36,
    kLoginMainLogicIdFieldNumber = 35,
  };
  // repeated uint64 loot_history = 26;
  int loot_history_size() const;
  private:
  int _internal_loot_history_size() const;
  public:
  void clear_loot_history();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_loot_history(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      _internal_loot_history() const;
  void _internal_add_loot_history(::PROTOBUF_NAMESPACE_ID::uint64 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      _internal_mutable_loot_history();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_history(int index) const;
  void set_loot_history(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value);
  void add_loot_history(::PROTOBUF_NAMESPACE_ID::uint64 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
      loot_history() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
      mutable_loot_history();

  // string name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string face = 5;
  void clear_face();
  const std::string& face() const;
  void set_face(const std::string& value);
  void set_face(std::string&& value);
  void set_face(const char* value);
  void set_face(const char* value, size_t size);
  std::string* mutable_face();
  std::string* release_face();
  void set_allocated_face(std::string* face);
  private:
  const std::string& _internal_face() const;
  void _internal_set_face(const std::string& value);
  std::string* _internal_mutable_face();
  public:

  // string guild_name = 8;
  void clear_guild_name();
  const std::string& guild_name() const;
  void set_guild_name(const std::string& value);
  void set_guild_name(std::string&& value);
  void set_guild_name(const char* value);
  void set_guild_name(const char* value, size_t size);
  std::string* mutable_guild_name();
  std::string* release_guild_name();
  void set_allocated_guild_name(std::string* guild_name);
  private:
  const std::string& _internal_guild_name() const;
  void _internal_set_guild_name(const std::string& value);
  std::string* _internal_mutable_guild_name();
  public:

  // string guild_short_name = 20;
  void clear_guild_short_name();
  const std::string& guild_short_name() const;
  void set_guild_short_name(const std::string& value);
  void set_guild_short_name(std::string&& value);
  void set_guild_short_name(const char* value);
  void set_guild_short_name(const char* value, size_t size);
  std::string* mutable_guild_short_name();
  std::string* release_guild_short_name();
  void set_allocated_guild_short_name(std::string* guild_short_name);
  private:
  const std::string& _internal_guild_short_name() const;
  void _internal_set_guild_short_name(const std::string& value);
  std::string* _internal_mutable_guild_short_name();
  public:

  // uint64 user_id = 1;
  void clear_user_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id() const;
  void set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_user_id() const;
  void _internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 fighting_power = 4;
  void clear_fighting_power();
  ::PROTOBUF_NAMESPACE_ID::uint64 fighting_power() const;
  void set_fighting_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fighting_power() const;
  void _internal_set_fighting_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 level = 3;
  void clear_level();
  ::PROTOBUF_NAMESPACE_ID::int32 level() const;
  void set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_level() const;
  void _internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 language_type = 9;
  void clear_language_type();
  ::PROTOBUF_NAMESPACE_ID::int32 language_type() const;
  void set_language_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_language_type() const;
  void _internal_set_language_type(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 guild_id = 7;
  void clear_guild_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id() const;
  void set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_guild_id() const;
  void _internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 hero_power = 10;
  void clear_hero_power();
  ::PROTOBUF_NAMESPACE_ID::uint64 hero_power() const;
  void set_hero_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_hero_power() const;
  void _internal_set_hero_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 soldier_power = 11;
  void clear_soldier_power();
  ::PROTOBUF_NAMESPACE_ID::uint64 soldier_power() const;
  void set_soldier_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_soldier_power() const;
  void _internal_set_soldier_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 building_power = 12;
  void clear_building_power();
  ::PROTOBUF_NAMESPACE_ID::uint64 building_power() const;
  void set_building_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_building_power() const;
  void _internal_set_building_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // bool online_flag = 6;
  void clear_online_flag();
  bool online_flag() const;
  void set_online_flag(bool value);
  private:
  bool _internal_online_flag() const;
  void _internal_set_online_flag(bool value);
  public:

  // bool record_power_rank = 17;
  void clear_record_power_rank();
  bool record_power_rank() const;
  void set_record_power_rank(bool value);
  private:
  bool _internal_record_power_rank() const;
  void _internal_set_record_power_rank(bool value);
  public:

  // uint32 guild_rank = 13;
  void clear_guild_rank();
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_rank() const;
  void set_guild_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_guild_rank() const;
  void _internal_set_guild_rank(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 survey_expire_time = 14;
  void clear_survey_expire_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 survey_expire_time() const;
  void set_survey_expire_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_survey_expire_time() const;
  void _internal_set_survey_expire_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 power_rank = 15;
  void clear_power_rank();
  ::PROTOBUF_NAMESPACE_ID::int32 power_rank() const;
  void set_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_power_rank() const;
  void _internal_set_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 best_power_rank = 16;
  void clear_best_power_rank();
  ::PROTOBUF_NAMESPACE_ID::int32 best_power_rank() const;
  void set_best_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_best_power_rank() const;
  void _internal_set_best_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 guild_server_id = 18;
  void clear_guild_server_id();
  ::PROTOBUF_NAMESPACE_ID::int32 guild_server_id() const;
  void set_guild_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_guild_server_id() const;
  void _internal_set_guild_server_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 guild_language = 19;
  void clear_guild_language();
  ::PROTOBUF_NAMESPACE_ID::int32 guild_language() const;
  void set_guild_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_guild_language() const;
  void _internal_set_guild_language(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint64 loot_defense_time = 22;
  void clear_loot_defense_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_defense_time() const;
  void set_loot_defense_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_loot_defense_time() const;
  void _internal_set_loot_defense_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 loot_attack_time = 23;
  void clear_loot_attack_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_attack_time() const;
  void set_loot_attack_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_loot_attack_time() const;
  void _internal_set_loot_attack_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 loot_lock_owner = 24;
  void clear_loot_lock_owner();
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_lock_owner() const;
  void set_loot_lock_owner(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_loot_lock_owner() const;
  void _internal_set_loot_lock_owner(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 city_center_level = 21;
  void clear_city_center_level();
  ::PROTOBUF_NAMESPACE_ID::uint32 city_center_level() const;
  void set_city_center_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_city_center_level() const;
  void _internal_set_city_center_level(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 online_server_type = 27;
  void clear_online_server_type();
  ::PROTOBUF_NAMESPACE_ID::uint32 online_server_type() const;
  void set_online_server_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_online_server_type() const;
  void _internal_set_online_server_type(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 loot_lock_at = 25;
  void clear_loot_lock_at();
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_lock_at() const;
  void set_loot_lock_at(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_loot_lock_at() const;
  void _internal_set_loot_lock_at(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 online_server_id = 28;
  void clear_online_server_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 online_server_id() const;
  void set_online_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_online_server_id() const;
  void _internal_set_online_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 fantasia_chapter = 29;
  void clear_fantasia_chapter();
  ::PROTOBUF_NAMESPACE_ID::uint32 fantasia_chapter() const;
  void set_fantasia_chapter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_fantasia_chapter() const;
  void _internal_set_fantasia_chapter(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 fantasia_chapter_pass = 30;
  void clear_fantasia_chapter_pass();
  ::PROTOBUF_NAMESPACE_ID::uint64 fantasia_chapter_pass() const;
  void set_fantasia_chapter_pass(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_fantasia_chapter_pass() const;
  void _internal_set_fantasia_chapter_pass(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 register_time = 31;
  void clear_register_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 register_time() const;
  void set_register_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_register_time() const;
  void _internal_set_register_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int32 season_point_peak = 32;
  void clear_season_point_peak();
  ::PROTOBUF_NAMESPACE_ID::int32 season_point_peak() const;
  void set_season_point_peak(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_season_point_peak() const;
  void _internal_set_season_point_peak(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 loot_win_times = 33;
  void clear_loot_win_times();
  ::PROTOBUF_NAMESPACE_ID::uint32 loot_win_times() const;
  void set_loot_win_times(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_loot_win_times() const;
  void _internal_set_loot_win_times(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint64 excluded_power = 34;
  void clear_excluded_power();
  ::PROTOBUF_NAMESPACE_ID::uint64 excluded_power() const;
  void set_excluded_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_excluded_power() const;
  void _internal_set_excluded_power(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint64 login_time = 36;
  void clear_login_time();
  ::PROTOBUF_NAMESPACE_ID::uint64 login_time() const;
  void set_login_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_login_time() const;
  void _internal_set_login_time(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 login_main_logic_id = 35;
  void clear_login_main_logic_id();
  ::PROTOBUF_NAMESPACE_ID::uint32 login_main_logic_id() const;
  void set_login_main_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_login_main_logic_id() const;
  void _internal_set_login_main_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:role_msg.ROLE_SUMMARY)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 > loot_history_;
  mutable std::atomic<int> _loot_history_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr face_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr guild_short_name_;
  ::PROTOBUF_NAMESPACE_ID::uint64 user_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fighting_power_;
  ::PROTOBUF_NAMESPACE_ID::int32 level_;
  ::PROTOBUF_NAMESPACE_ID::int32 language_type_;
  ::PROTOBUF_NAMESPACE_ID::uint64 guild_id_;
  ::PROTOBUF_NAMESPACE_ID::uint64 hero_power_;
  ::PROTOBUF_NAMESPACE_ID::uint64 soldier_power_;
  ::PROTOBUF_NAMESPACE_ID::uint64 building_power_;
  bool online_flag_;
  bool record_power_rank_;
  ::PROTOBUF_NAMESPACE_ID::uint32 guild_rank_;
  ::PROTOBUF_NAMESPACE_ID::uint64 survey_expire_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 power_rank_;
  ::PROTOBUF_NAMESPACE_ID::int32 best_power_rank_;
  ::PROTOBUF_NAMESPACE_ID::int32 guild_server_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 guild_language_;
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_defense_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_attack_time_;
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_lock_owner_;
  ::PROTOBUF_NAMESPACE_ID::uint32 city_center_level_;
  ::PROTOBUF_NAMESPACE_ID::uint32 online_server_type_;
  ::PROTOBUF_NAMESPACE_ID::uint64 loot_lock_at_;
  ::PROTOBUF_NAMESPACE_ID::uint32 online_server_id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 fantasia_chapter_;
  ::PROTOBUF_NAMESPACE_ID::uint64 fantasia_chapter_pass_;
  ::PROTOBUF_NAMESPACE_ID::uint64 register_time_;
  ::PROTOBUF_NAMESPACE_ID::int32 season_point_peak_;
  ::PROTOBUF_NAMESPACE_ID::uint32 loot_win_times_;
  ::PROTOBUF_NAMESPACE_ID::uint64 excluded_power_;
  ::PROTOBUF_NAMESPACE_ID::uint64 login_time_;
  ::PROTOBUF_NAMESPACE_ID::uint32 login_main_logic_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_role_5fserver_5fmsg_2eproto;
};
// -------------------------------------------------------------------

class AGENT_SEQ_ID :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:role_msg.AGENT_SEQ_ID) */ {
 public:
  AGENT_SEQ_ID();
  virtual ~AGENT_SEQ_ID();

  AGENT_SEQ_ID(const AGENT_SEQ_ID& from);
  AGENT_SEQ_ID(AGENT_SEQ_ID&& from) noexcept
    : AGENT_SEQ_ID() {
    *this = ::std::move(from);
  }

  inline AGENT_SEQ_ID& operator=(const AGENT_SEQ_ID& from) {
    CopyFrom(from);
    return *this;
  }
  inline AGENT_SEQ_ID& operator=(AGENT_SEQ_ID&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AGENT_SEQ_ID& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AGENT_SEQ_ID* internal_default_instance() {
    return reinterpret_cast<const AGENT_SEQ_ID*>(
               &_AGENT_SEQ_ID_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AGENT_SEQ_ID& a, AGENT_SEQ_ID& b) {
    a.Swap(&b);
  }
  inline void Swap(AGENT_SEQ_ID* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AGENT_SEQ_ID* New() const final {
    return CreateMaybeMessage<AGENT_SEQ_ID>(nullptr);
  }

  AGENT_SEQ_ID* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AGENT_SEQ_ID>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AGENT_SEQ_ID& from);
  void MergeFrom(const AGENT_SEQ_ID& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AGENT_SEQ_ID* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "role_msg.AGENT_SEQ_ID";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_role_5fserver_5fmsg_2eproto);
    return ::descriptor_table_role_5fserver_5fmsg_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSeqIdFieldNumber = 1,
  };
  // uint64 seq_id = 1;
  void clear_seq_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 seq_id() const;
  void set_seq_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_seq_id() const;
  void _internal_set_seq_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:role_msg.AGENT_SEQ_ID)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 seq_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_role_5fserver_5fmsg_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ROLE_SUMMARY

// uint64 user_id = 1;
inline void ROLE_SUMMARY::clear_user_id() {
  user_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_user_id() const {
  return user_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::user_id() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.user_id)
  return _internal_user_id();
}
inline void ROLE_SUMMARY::_internal_set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  user_id_ = value;
}
inline void ROLE_SUMMARY::set_user_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.user_id)
}

// string name = 2;
inline void ROLE_SUMMARY::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ROLE_SUMMARY::name() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.name)
  return _internal_name();
}
inline void ROLE_SUMMARY::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.name)
}
inline std::string* ROLE_SUMMARY::mutable_name() {
  // @@protoc_insertion_point(field_mutable:role_msg.ROLE_SUMMARY.name)
  return _internal_mutable_name();
}
inline const std::string& ROLE_SUMMARY::_internal_name() const {
  return name_.GetNoArena();
}
inline void ROLE_SUMMARY::_internal_set_name(const std::string& value) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ROLE_SUMMARY::set_name(std::string&& value) {
  
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:role_msg.ROLE_SUMMARY.name)
}
inline void ROLE_SUMMARY::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:role_msg.ROLE_SUMMARY.name)
}
inline void ROLE_SUMMARY::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:role_msg.ROLE_SUMMARY.name)
}
inline std::string* ROLE_SUMMARY::_internal_mutable_name() {
  
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ROLE_SUMMARY::release_name() {
  // @@protoc_insertion_point(field_release:role_msg.ROLE_SUMMARY.name)
  
  return name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ROLE_SUMMARY::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:role_msg.ROLE_SUMMARY.name)
}

// int32 level = 3;
inline void ROLE_SUMMARY::clear_level() {
  level_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::_internal_level() const {
  return level_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::level() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.level)
  return _internal_level();
}
inline void ROLE_SUMMARY::_internal_set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  level_ = value;
}
inline void ROLE_SUMMARY::set_level(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.level)
}

// uint64 fighting_power = 4;
inline void ROLE_SUMMARY::clear_fighting_power() {
  fighting_power_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_fighting_power() const {
  return fighting_power_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::fighting_power() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.fighting_power)
  return _internal_fighting_power();
}
inline void ROLE_SUMMARY::_internal_set_fighting_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  fighting_power_ = value;
}
inline void ROLE_SUMMARY::set_fighting_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_fighting_power(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.fighting_power)
}

// string face = 5;
inline void ROLE_SUMMARY::clear_face() {
  face_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ROLE_SUMMARY::face() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.face)
  return _internal_face();
}
inline void ROLE_SUMMARY::set_face(const std::string& value) {
  _internal_set_face(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.face)
}
inline std::string* ROLE_SUMMARY::mutable_face() {
  // @@protoc_insertion_point(field_mutable:role_msg.ROLE_SUMMARY.face)
  return _internal_mutable_face();
}
inline const std::string& ROLE_SUMMARY::_internal_face() const {
  return face_.GetNoArena();
}
inline void ROLE_SUMMARY::_internal_set_face(const std::string& value) {
  
  face_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ROLE_SUMMARY::set_face(std::string&& value) {
  
  face_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:role_msg.ROLE_SUMMARY.face)
}
inline void ROLE_SUMMARY::set_face(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  face_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:role_msg.ROLE_SUMMARY.face)
}
inline void ROLE_SUMMARY::set_face(const char* value, size_t size) {
  
  face_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:role_msg.ROLE_SUMMARY.face)
}
inline std::string* ROLE_SUMMARY::_internal_mutable_face() {
  
  return face_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ROLE_SUMMARY::release_face() {
  // @@protoc_insertion_point(field_release:role_msg.ROLE_SUMMARY.face)
  
  return face_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ROLE_SUMMARY::set_allocated_face(std::string* face) {
  if (face != nullptr) {
    
  } else {
    
  }
  face_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), face);
  // @@protoc_insertion_point(field_set_allocated:role_msg.ROLE_SUMMARY.face)
}

// bool online_flag = 6;
inline void ROLE_SUMMARY::clear_online_flag() {
  online_flag_ = false;
}
inline bool ROLE_SUMMARY::_internal_online_flag() const {
  return online_flag_;
}
inline bool ROLE_SUMMARY::online_flag() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.online_flag)
  return _internal_online_flag();
}
inline void ROLE_SUMMARY::_internal_set_online_flag(bool value) {
  
  online_flag_ = value;
}
inline void ROLE_SUMMARY::set_online_flag(bool value) {
  _internal_set_online_flag(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.online_flag)
}

// uint64 guild_id = 7;
inline void ROLE_SUMMARY::clear_guild_id() {
  guild_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_guild_id() const {
  return guild_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::guild_id() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.guild_id)
  return _internal_guild_id();
}
inline void ROLE_SUMMARY::_internal_set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  guild_id_ = value;
}
inline void ROLE_SUMMARY::set_guild_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_guild_id(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.guild_id)
}

// string guild_name = 8;
inline void ROLE_SUMMARY::clear_guild_name() {
  guild_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ROLE_SUMMARY::guild_name() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.guild_name)
  return _internal_guild_name();
}
inline void ROLE_SUMMARY::set_guild_name(const std::string& value) {
  _internal_set_guild_name(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.guild_name)
}
inline std::string* ROLE_SUMMARY::mutable_guild_name() {
  // @@protoc_insertion_point(field_mutable:role_msg.ROLE_SUMMARY.guild_name)
  return _internal_mutable_guild_name();
}
inline const std::string& ROLE_SUMMARY::_internal_guild_name() const {
  return guild_name_.GetNoArena();
}
inline void ROLE_SUMMARY::_internal_set_guild_name(const std::string& value) {
  
  guild_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ROLE_SUMMARY::set_guild_name(std::string&& value) {
  
  guild_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:role_msg.ROLE_SUMMARY.guild_name)
}
inline void ROLE_SUMMARY::set_guild_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  guild_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:role_msg.ROLE_SUMMARY.guild_name)
}
inline void ROLE_SUMMARY::set_guild_name(const char* value, size_t size) {
  
  guild_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:role_msg.ROLE_SUMMARY.guild_name)
}
inline std::string* ROLE_SUMMARY::_internal_mutable_guild_name() {
  
  return guild_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ROLE_SUMMARY::release_guild_name() {
  // @@protoc_insertion_point(field_release:role_msg.ROLE_SUMMARY.guild_name)
  
  return guild_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ROLE_SUMMARY::set_allocated_guild_name(std::string* guild_name) {
  if (guild_name != nullptr) {
    
  } else {
    
  }
  guild_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guild_name);
  // @@protoc_insertion_point(field_set_allocated:role_msg.ROLE_SUMMARY.guild_name)
}

// int32 language_type = 9;
inline void ROLE_SUMMARY::clear_language_type() {
  language_type_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::_internal_language_type() const {
  return language_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::language_type() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.language_type)
  return _internal_language_type();
}
inline void ROLE_SUMMARY::_internal_set_language_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  language_type_ = value;
}
inline void ROLE_SUMMARY::set_language_type(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_language_type(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.language_type)
}

// uint64 hero_power = 10;
inline void ROLE_SUMMARY::clear_hero_power() {
  hero_power_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_hero_power() const {
  return hero_power_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::hero_power() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.hero_power)
  return _internal_hero_power();
}
inline void ROLE_SUMMARY::_internal_set_hero_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  hero_power_ = value;
}
inline void ROLE_SUMMARY::set_hero_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_hero_power(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.hero_power)
}

// uint64 soldier_power = 11;
inline void ROLE_SUMMARY::clear_soldier_power() {
  soldier_power_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_soldier_power() const {
  return soldier_power_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::soldier_power() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.soldier_power)
  return _internal_soldier_power();
}
inline void ROLE_SUMMARY::_internal_set_soldier_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  soldier_power_ = value;
}
inline void ROLE_SUMMARY::set_soldier_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_soldier_power(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.soldier_power)
}

// uint64 building_power = 12;
inline void ROLE_SUMMARY::clear_building_power() {
  building_power_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_building_power() const {
  return building_power_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::building_power() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.building_power)
  return _internal_building_power();
}
inline void ROLE_SUMMARY::_internal_set_building_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  building_power_ = value;
}
inline void ROLE_SUMMARY::set_building_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_building_power(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.building_power)
}

// uint32 guild_rank = 13;
inline void ROLE_SUMMARY::clear_guild_rank() {
  guild_rank_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::_internal_guild_rank() const {
  return guild_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::guild_rank() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.guild_rank)
  return _internal_guild_rank();
}
inline void ROLE_SUMMARY::_internal_set_guild_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  guild_rank_ = value;
}
inline void ROLE_SUMMARY::set_guild_rank(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_guild_rank(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.guild_rank)
}

// uint64 survey_expire_time = 14;
inline void ROLE_SUMMARY::clear_survey_expire_time() {
  survey_expire_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_survey_expire_time() const {
  return survey_expire_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::survey_expire_time() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.survey_expire_time)
  return _internal_survey_expire_time();
}
inline void ROLE_SUMMARY::_internal_set_survey_expire_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  survey_expire_time_ = value;
}
inline void ROLE_SUMMARY::set_survey_expire_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_survey_expire_time(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.survey_expire_time)
}

// int32 power_rank = 15;
inline void ROLE_SUMMARY::clear_power_rank() {
  power_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::_internal_power_rank() const {
  return power_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::power_rank() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.power_rank)
  return _internal_power_rank();
}
inline void ROLE_SUMMARY::_internal_set_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  power_rank_ = value;
}
inline void ROLE_SUMMARY::set_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_power_rank(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.power_rank)
}

// int32 best_power_rank = 16;
inline void ROLE_SUMMARY::clear_best_power_rank() {
  best_power_rank_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::_internal_best_power_rank() const {
  return best_power_rank_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::best_power_rank() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.best_power_rank)
  return _internal_best_power_rank();
}
inline void ROLE_SUMMARY::_internal_set_best_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  best_power_rank_ = value;
}
inline void ROLE_SUMMARY::set_best_power_rank(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_best_power_rank(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.best_power_rank)
}

// bool record_power_rank = 17;
inline void ROLE_SUMMARY::clear_record_power_rank() {
  record_power_rank_ = false;
}
inline bool ROLE_SUMMARY::_internal_record_power_rank() const {
  return record_power_rank_;
}
inline bool ROLE_SUMMARY::record_power_rank() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.record_power_rank)
  return _internal_record_power_rank();
}
inline void ROLE_SUMMARY::_internal_set_record_power_rank(bool value) {
  
  record_power_rank_ = value;
}
inline void ROLE_SUMMARY::set_record_power_rank(bool value) {
  _internal_set_record_power_rank(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.record_power_rank)
}

// int32 guild_server_id = 18;
inline void ROLE_SUMMARY::clear_guild_server_id() {
  guild_server_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::_internal_guild_server_id() const {
  return guild_server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::guild_server_id() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.guild_server_id)
  return _internal_guild_server_id();
}
inline void ROLE_SUMMARY::_internal_set_guild_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  guild_server_id_ = value;
}
inline void ROLE_SUMMARY::set_guild_server_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_guild_server_id(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.guild_server_id)
}

// int32 guild_language = 19;
inline void ROLE_SUMMARY::clear_guild_language() {
  guild_language_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::_internal_guild_language() const {
  return guild_language_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::guild_language() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.guild_language)
  return _internal_guild_language();
}
inline void ROLE_SUMMARY::_internal_set_guild_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  guild_language_ = value;
}
inline void ROLE_SUMMARY::set_guild_language(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_guild_language(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.guild_language)
}

// string guild_short_name = 20;
inline void ROLE_SUMMARY::clear_guild_short_name() {
  guild_short_name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& ROLE_SUMMARY::guild_short_name() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.guild_short_name)
  return _internal_guild_short_name();
}
inline void ROLE_SUMMARY::set_guild_short_name(const std::string& value) {
  _internal_set_guild_short_name(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.guild_short_name)
}
inline std::string* ROLE_SUMMARY::mutable_guild_short_name() {
  // @@protoc_insertion_point(field_mutable:role_msg.ROLE_SUMMARY.guild_short_name)
  return _internal_mutable_guild_short_name();
}
inline const std::string& ROLE_SUMMARY::_internal_guild_short_name() const {
  return guild_short_name_.GetNoArena();
}
inline void ROLE_SUMMARY::_internal_set_guild_short_name(const std::string& value) {
  
  guild_short_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ROLE_SUMMARY::set_guild_short_name(std::string&& value) {
  
  guild_short_name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:role_msg.ROLE_SUMMARY.guild_short_name)
}
inline void ROLE_SUMMARY::set_guild_short_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  guild_short_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:role_msg.ROLE_SUMMARY.guild_short_name)
}
inline void ROLE_SUMMARY::set_guild_short_name(const char* value, size_t size) {
  
  guild_short_name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:role_msg.ROLE_SUMMARY.guild_short_name)
}
inline std::string* ROLE_SUMMARY::_internal_mutable_guild_short_name() {
  
  return guild_short_name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ROLE_SUMMARY::release_guild_short_name() {
  // @@protoc_insertion_point(field_release:role_msg.ROLE_SUMMARY.guild_short_name)
  
  return guild_short_name_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ROLE_SUMMARY::set_allocated_guild_short_name(std::string* guild_short_name) {
  if (guild_short_name != nullptr) {
    
  } else {
    
  }
  guild_short_name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), guild_short_name);
  // @@protoc_insertion_point(field_set_allocated:role_msg.ROLE_SUMMARY.guild_short_name)
}

// uint32 city_center_level = 21;
inline void ROLE_SUMMARY::clear_city_center_level() {
  city_center_level_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::_internal_city_center_level() const {
  return city_center_level_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::city_center_level() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.city_center_level)
  return _internal_city_center_level();
}
inline void ROLE_SUMMARY::_internal_set_city_center_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  city_center_level_ = value;
}
inline void ROLE_SUMMARY::set_city_center_level(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_city_center_level(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.city_center_level)
}

// uint64 loot_defense_time = 22;
inline void ROLE_SUMMARY::clear_loot_defense_time() {
  loot_defense_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_loot_defense_time() const {
  return loot_defense_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::loot_defense_time() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.loot_defense_time)
  return _internal_loot_defense_time();
}
inline void ROLE_SUMMARY::_internal_set_loot_defense_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  loot_defense_time_ = value;
}
inline void ROLE_SUMMARY::set_loot_defense_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_loot_defense_time(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.loot_defense_time)
}

// uint64 loot_attack_time = 23;
inline void ROLE_SUMMARY::clear_loot_attack_time() {
  loot_attack_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_loot_attack_time() const {
  return loot_attack_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::loot_attack_time() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.loot_attack_time)
  return _internal_loot_attack_time();
}
inline void ROLE_SUMMARY::_internal_set_loot_attack_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  loot_attack_time_ = value;
}
inline void ROLE_SUMMARY::set_loot_attack_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_loot_attack_time(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.loot_attack_time)
}

// uint64 loot_lock_owner = 24;
inline void ROLE_SUMMARY::clear_loot_lock_owner() {
  loot_lock_owner_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_loot_lock_owner() const {
  return loot_lock_owner_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::loot_lock_owner() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.loot_lock_owner)
  return _internal_loot_lock_owner();
}
inline void ROLE_SUMMARY::_internal_set_loot_lock_owner(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  loot_lock_owner_ = value;
}
inline void ROLE_SUMMARY::set_loot_lock_owner(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_loot_lock_owner(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.loot_lock_owner)
}

// uint64 loot_lock_at = 25;
inline void ROLE_SUMMARY::clear_loot_lock_at() {
  loot_lock_at_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_loot_lock_at() const {
  return loot_lock_at_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::loot_lock_at() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.loot_lock_at)
  return _internal_loot_lock_at();
}
inline void ROLE_SUMMARY::_internal_set_loot_lock_at(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  loot_lock_at_ = value;
}
inline void ROLE_SUMMARY::set_loot_lock_at(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_loot_lock_at(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.loot_lock_at)
}

// repeated uint64 loot_history = 26;
inline int ROLE_SUMMARY::_internal_loot_history_size() const {
  return loot_history_.size();
}
inline int ROLE_SUMMARY::loot_history_size() const {
  return _internal_loot_history_size();
}
inline void ROLE_SUMMARY::clear_loot_history() {
  loot_history_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_loot_history(int index) const {
  return loot_history_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::loot_history(int index) const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.loot_history)
  return _internal_loot_history(index);
}
inline void ROLE_SUMMARY::set_loot_history(int index, ::PROTOBUF_NAMESPACE_ID::uint64 value) {
  loot_history_.Set(index, value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.loot_history)
}
inline void ROLE_SUMMARY::_internal_add_loot_history(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  loot_history_.Add(value);
}
inline void ROLE_SUMMARY::add_loot_history(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_add_loot_history(value);
  // @@protoc_insertion_point(field_add:role_msg.ROLE_SUMMARY.loot_history)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ROLE_SUMMARY::_internal_loot_history() const {
  return loot_history_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >&
ROLE_SUMMARY::loot_history() const {
  // @@protoc_insertion_point(field_list:role_msg.ROLE_SUMMARY.loot_history)
  return _internal_loot_history();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ROLE_SUMMARY::_internal_mutable_loot_history() {
  return &loot_history_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint64 >*
ROLE_SUMMARY::mutable_loot_history() {
  // @@protoc_insertion_point(field_mutable_list:role_msg.ROLE_SUMMARY.loot_history)
  return _internal_mutable_loot_history();
}

// uint32 online_server_type = 27;
inline void ROLE_SUMMARY::clear_online_server_type() {
  online_server_type_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::_internal_online_server_type() const {
  return online_server_type_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::online_server_type() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.online_server_type)
  return _internal_online_server_type();
}
inline void ROLE_SUMMARY::_internal_set_online_server_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  online_server_type_ = value;
}
inline void ROLE_SUMMARY::set_online_server_type(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_online_server_type(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.online_server_type)
}

// uint32 online_server_id = 28;
inline void ROLE_SUMMARY::clear_online_server_id() {
  online_server_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::_internal_online_server_id() const {
  return online_server_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::online_server_id() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.online_server_id)
  return _internal_online_server_id();
}
inline void ROLE_SUMMARY::_internal_set_online_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  online_server_id_ = value;
}
inline void ROLE_SUMMARY::set_online_server_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_online_server_id(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.online_server_id)
}

// uint32 fantasia_chapter = 29;
inline void ROLE_SUMMARY::clear_fantasia_chapter() {
  fantasia_chapter_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::_internal_fantasia_chapter() const {
  return fantasia_chapter_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::fantasia_chapter() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.fantasia_chapter)
  return _internal_fantasia_chapter();
}
inline void ROLE_SUMMARY::_internal_set_fantasia_chapter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  fantasia_chapter_ = value;
}
inline void ROLE_SUMMARY::set_fantasia_chapter(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_fantasia_chapter(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.fantasia_chapter)
}

// uint64 fantasia_chapter_pass = 30;
inline void ROLE_SUMMARY::clear_fantasia_chapter_pass() {
  fantasia_chapter_pass_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_fantasia_chapter_pass() const {
  return fantasia_chapter_pass_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::fantasia_chapter_pass() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.fantasia_chapter_pass)
  return _internal_fantasia_chapter_pass();
}
inline void ROLE_SUMMARY::_internal_set_fantasia_chapter_pass(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  fantasia_chapter_pass_ = value;
}
inline void ROLE_SUMMARY::set_fantasia_chapter_pass(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_fantasia_chapter_pass(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.fantasia_chapter_pass)
}

// uint64 register_time = 31;
inline void ROLE_SUMMARY::clear_register_time() {
  register_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_register_time() const {
  return register_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::register_time() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.register_time)
  return _internal_register_time();
}
inline void ROLE_SUMMARY::_internal_set_register_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  register_time_ = value;
}
inline void ROLE_SUMMARY::set_register_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_register_time(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.register_time)
}

// int32 season_point_peak = 32;
inline void ROLE_SUMMARY::clear_season_point_peak() {
  season_point_peak_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::_internal_season_point_peak() const {
  return season_point_peak_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ROLE_SUMMARY::season_point_peak() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.season_point_peak)
  return _internal_season_point_peak();
}
inline void ROLE_SUMMARY::_internal_set_season_point_peak(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  season_point_peak_ = value;
}
inline void ROLE_SUMMARY::set_season_point_peak(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_season_point_peak(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.season_point_peak)
}

// uint32 loot_win_times = 33;
inline void ROLE_SUMMARY::clear_loot_win_times() {
  loot_win_times_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::_internal_loot_win_times() const {
  return loot_win_times_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::loot_win_times() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.loot_win_times)
  return _internal_loot_win_times();
}
inline void ROLE_SUMMARY::_internal_set_loot_win_times(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  loot_win_times_ = value;
}
inline void ROLE_SUMMARY::set_loot_win_times(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_loot_win_times(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.loot_win_times)
}

// uint64 excluded_power = 34;
inline void ROLE_SUMMARY::clear_excluded_power() {
  excluded_power_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_excluded_power() const {
  return excluded_power_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::excluded_power() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.excluded_power)
  return _internal_excluded_power();
}
inline void ROLE_SUMMARY::_internal_set_excluded_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  excluded_power_ = value;
}
inline void ROLE_SUMMARY::set_excluded_power(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_excluded_power(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.excluded_power)
}

// uint32 login_main_logic_id = 35;
inline void ROLE_SUMMARY::clear_login_main_logic_id() {
  login_main_logic_id_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::_internal_login_main_logic_id() const {
  return login_main_logic_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ROLE_SUMMARY::login_main_logic_id() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.login_main_logic_id)
  return _internal_login_main_logic_id();
}
inline void ROLE_SUMMARY::_internal_set_login_main_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  login_main_logic_id_ = value;
}
inline void ROLE_SUMMARY::set_login_main_logic_id(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_login_main_logic_id(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.login_main_logic_id)
}

// uint64 login_time = 36;
inline void ROLE_SUMMARY::clear_login_time() {
  login_time_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::_internal_login_time() const {
  return login_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ROLE_SUMMARY::login_time() const {
  // @@protoc_insertion_point(field_get:role_msg.ROLE_SUMMARY.login_time)
  return _internal_login_time();
}
inline void ROLE_SUMMARY::_internal_set_login_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  login_time_ = value;
}
inline void ROLE_SUMMARY::set_login_time(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_login_time(value);
  // @@protoc_insertion_point(field_set:role_msg.ROLE_SUMMARY.login_time)
}

// -------------------------------------------------------------------

// AGENT_SEQ_ID

// uint64 seq_id = 1;
inline void AGENT_SEQ_ID::clear_seq_id() {
  seq_id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AGENT_SEQ_ID::_internal_seq_id() const {
  return seq_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 AGENT_SEQ_ID::seq_id() const {
  // @@protoc_insertion_point(field_get:role_msg.AGENT_SEQ_ID.seq_id)
  return _internal_seq_id();
}
inline void AGENT_SEQ_ID::_internal_set_seq_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  seq_id_ = value;
}
inline void AGENT_SEQ_ID::set_seq_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_seq_id(value);
  // @@protoc_insertion_point(field_set:role_msg.AGENT_SEQ_ID.seq_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace role_msg

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_role_5fserver_5fmsg_2eproto
