// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nats_msg.proto

#include "nats_msg.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_rpc_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_RPC_REQUEST_rpc_5fmsg_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_rpc_5fmsg_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_RPC_RESPONSE_rpc_5fmsg_2eproto;
namespace nats_msg {
class NATS_MSG_PRXOYDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NATS_MSG_PRXOY> _instance;
  const ::rpc_msg::RPC_REQUEST* rpc_request_;
  const ::rpc_msg::RPC_RESPONSE* rpc_response_;
} _NATS_MSG_PRXOY_default_instance_;
}  // namespace nats_msg
static void InitDefaultsscc_info_NATS_MSG_PRXOY_nats_5fmsg_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::nats_msg::_NATS_MSG_PRXOY_default_instance_;
    new (ptr) ::nats_msg::NATS_MSG_PRXOY();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::nats_msg::NATS_MSG_PRXOY::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_NATS_MSG_PRXOY_nats_5fmsg_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_NATS_MSG_PRXOY_nats_5fmsg_2eproto}, {
      &scc_info_RPC_REQUEST_rpc_5fmsg_2eproto.base,
      &scc_info_RPC_RESPONSE_rpc_5fmsg_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_nats_5fmsg_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_nats_5fmsg_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_nats_5fmsg_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_nats_5fmsg_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::nats_msg::NATS_MSG_PRXOY, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::nats_msg::NATS_MSG_PRXOY, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::nats_msg::NATS_MSG_PRXOY, rpc_type_),
  offsetof(::nats_msg::NATS_MSG_PRXOYDefaultTypeInternal, rpc_request_),
  offsetof(::nats_msg::NATS_MSG_PRXOYDefaultTypeInternal, rpc_response_),
  PROTOBUF_FIELD_OFFSET(::nats_msg::NATS_MSG_PRXOY, msg_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::nats_msg::NATS_MSG_PRXOY)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::nats_msg::_NATS_MSG_PRXOY_default_instance_),
};

const char descriptor_table_protodef_nats_5fmsg_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016nats_msg.proto\022\010nats_msg\032\rrpc_msg.prot"
  "o\"\205\001\n\016NATS_MSG_PRXOY\022\020\n\010rpc_type\030\001 \001(\r\022+"
  "\n\013rpc_request\030d \001(\0132\024.rpc_msg.RPC_REQUES"
  "TH\000\022-\n\014rpc_response\030e \001(\0132\025.rpc_msg.RPC_"
  "RESPONSEH\000B\005\n\003msgb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_nats_5fmsg_2eproto_deps[1] = {
  &::descriptor_table_rpc_5fmsg_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_nats_5fmsg_2eproto_sccs[1] = {
  &scc_info_NATS_MSG_PRXOY_nats_5fmsg_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_nats_5fmsg_2eproto_once;
static bool descriptor_table_nats_5fmsg_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_nats_5fmsg_2eproto = {
  &descriptor_table_nats_5fmsg_2eproto_initialized, descriptor_table_protodef_nats_5fmsg_2eproto, "nats_msg.proto", 185,
  &descriptor_table_nats_5fmsg_2eproto_once, descriptor_table_nats_5fmsg_2eproto_sccs, descriptor_table_nats_5fmsg_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_nats_5fmsg_2eproto::offsets,
  file_level_metadata_nats_5fmsg_2eproto, 1, file_level_enum_descriptors_nats_5fmsg_2eproto, file_level_service_descriptors_nats_5fmsg_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_nats_5fmsg_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_nats_5fmsg_2eproto), true);
namespace nats_msg {

// ===================================================================

void NATS_MSG_PRXOY::InitAsDefaultInstance() {
  ::nats_msg::_NATS_MSG_PRXOY_default_instance_.rpc_request_ = const_cast< ::rpc_msg::RPC_REQUEST*>(
      ::rpc_msg::RPC_REQUEST::internal_default_instance());
  ::nats_msg::_NATS_MSG_PRXOY_default_instance_.rpc_response_ = const_cast< ::rpc_msg::RPC_RESPONSE*>(
      ::rpc_msg::RPC_RESPONSE::internal_default_instance());
}
class NATS_MSG_PRXOY::_Internal {
 public:
  static const ::rpc_msg::RPC_REQUEST& rpc_request(const NATS_MSG_PRXOY* msg);
  static const ::rpc_msg::RPC_RESPONSE& rpc_response(const NATS_MSG_PRXOY* msg);
};

const ::rpc_msg::RPC_REQUEST&
NATS_MSG_PRXOY::_Internal::rpc_request(const NATS_MSG_PRXOY* msg) {
  return *msg->msg_.rpc_request_;
}
const ::rpc_msg::RPC_RESPONSE&
NATS_MSG_PRXOY::_Internal::rpc_response(const NATS_MSG_PRXOY* msg) {
  return *msg->msg_.rpc_response_;
}
void NATS_MSG_PRXOY::set_allocated_rpc_request(::rpc_msg::RPC_REQUEST* rpc_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (rpc_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rpc_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rpc_request, submessage_arena);
    }
    set_has_rpc_request();
    msg_.rpc_request_ = rpc_request;
  }
  // @@protoc_insertion_point(field_set_allocated:nats_msg.NATS_MSG_PRXOY.rpc_request)
}
void NATS_MSG_PRXOY::clear_rpc_request() {
  if (_internal_has_rpc_request()) {
    delete msg_.rpc_request_;
    clear_has_msg();
  }
}
void NATS_MSG_PRXOY::set_allocated_rpc_response(::rpc_msg::RPC_RESPONSE* rpc_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (rpc_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rpc_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rpc_response, submessage_arena);
    }
    set_has_rpc_response();
    msg_.rpc_response_ = rpc_response;
  }
  // @@protoc_insertion_point(field_set_allocated:nats_msg.NATS_MSG_PRXOY.rpc_response)
}
void NATS_MSG_PRXOY::clear_rpc_response() {
  if (_internal_has_rpc_response()) {
    delete msg_.rpc_response_;
    clear_has_msg();
  }
}
NATS_MSG_PRXOY::NATS_MSG_PRXOY()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:nats_msg.NATS_MSG_PRXOY)
}
NATS_MSG_PRXOY::NATS_MSG_PRXOY(const NATS_MSG_PRXOY& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rpc_type_ = from.rpc_type_;
  clear_has_msg();
  switch (from.msg_case()) {
    case kRpcRequest: {
      _internal_mutable_rpc_request()->::rpc_msg::RPC_REQUEST::MergeFrom(from._internal_rpc_request());
      break;
    }
    case kRpcResponse: {
      _internal_mutable_rpc_response()->::rpc_msg::RPC_RESPONSE::MergeFrom(from._internal_rpc_response());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:nats_msg.NATS_MSG_PRXOY)
}

void NATS_MSG_PRXOY::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NATS_MSG_PRXOY_nats_5fmsg_2eproto.base);
  rpc_type_ = 0u;
  clear_has_msg();
}

NATS_MSG_PRXOY::~NATS_MSG_PRXOY() {
  // @@protoc_insertion_point(destructor:nats_msg.NATS_MSG_PRXOY)
  SharedDtor();
}

void NATS_MSG_PRXOY::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void NATS_MSG_PRXOY::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NATS_MSG_PRXOY& NATS_MSG_PRXOY::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NATS_MSG_PRXOY_nats_5fmsg_2eproto.base);
  return *internal_default_instance();
}


void NATS_MSG_PRXOY::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:nats_msg.NATS_MSG_PRXOY)
  switch (msg_case()) {
    case kRpcRequest: {
      delete msg_.rpc_request_;
      break;
    }
    case kRpcResponse: {
      delete msg_.rpc_response_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void NATS_MSG_PRXOY::Clear() {
// @@protoc_insertion_point(message_clear_start:nats_msg.NATS_MSG_PRXOY)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rpc_type_ = 0u;
  clear_msg();
  _internal_metadata_.Clear();
}

const char* NATS_MSG_PRXOY::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 rpc_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          rpc_type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .rpc_msg.RPC_REQUEST rpc_request = 100;
      case 100:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_rpc_request(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .rpc_msg.RPC_RESPONSE rpc_response = 101;
      case 101:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_rpc_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NATS_MSG_PRXOY::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:nats_msg.NATS_MSG_PRXOY)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rpc_type = 1;
  if (this->rpc_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_rpc_type(), target);
  }

  // .rpc_msg.RPC_REQUEST rpc_request = 100;
  if (_internal_has_rpc_request()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        100, _Internal::rpc_request(this), target, stream);
  }

  // .rpc_msg.RPC_RESPONSE rpc_response = 101;
  if (_internal_has_rpc_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        101, _Internal::rpc_response(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:nats_msg.NATS_MSG_PRXOY)
  return target;
}

size_t NATS_MSG_PRXOY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:nats_msg.NATS_MSG_PRXOY)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 rpc_type = 1;
  if (this->rpc_type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_rpc_type());
  }

  switch (msg_case()) {
    // .rpc_msg.RPC_REQUEST rpc_request = 100;
    case kRpcRequest: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.rpc_request_);
      break;
    }
    // .rpc_msg.RPC_RESPONSE rpc_response = 101;
    case kRpcResponse: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *msg_.rpc_response_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NATS_MSG_PRXOY::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:nats_msg.NATS_MSG_PRXOY)
  GOOGLE_DCHECK_NE(&from, this);
  const NATS_MSG_PRXOY* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NATS_MSG_PRXOY>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:nats_msg.NATS_MSG_PRXOY)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:nats_msg.NATS_MSG_PRXOY)
    MergeFrom(*source);
  }
}

void NATS_MSG_PRXOY::MergeFrom(const NATS_MSG_PRXOY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:nats_msg.NATS_MSG_PRXOY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rpc_type() != 0) {
    _internal_set_rpc_type(from._internal_rpc_type());
  }
  switch (from.msg_case()) {
    case kRpcRequest: {
      _internal_mutable_rpc_request()->::rpc_msg::RPC_REQUEST::MergeFrom(from._internal_rpc_request());
      break;
    }
    case kRpcResponse: {
      _internal_mutable_rpc_response()->::rpc_msg::RPC_RESPONSE::MergeFrom(from._internal_rpc_response());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void NATS_MSG_PRXOY::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:nats_msg.NATS_MSG_PRXOY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NATS_MSG_PRXOY::CopyFrom(const NATS_MSG_PRXOY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:nats_msg.NATS_MSG_PRXOY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NATS_MSG_PRXOY::IsInitialized() const {
  return true;
}

void NATS_MSG_PRXOY::InternalSwap(NATS_MSG_PRXOY* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(rpc_type_, other->rpc_type_);
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata NATS_MSG_PRXOY::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace nats_msg
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::nats_msg::NATS_MSG_PRXOY* Arena::CreateMaybeMessage< ::nats_msg::NATS_MSG_PRXOY >(Arena* arena) {
  return Arena::CreateInternal< ::nats_msg::NATS_MSG_PRXOY >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
